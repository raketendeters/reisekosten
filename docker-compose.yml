#version: '3.8'
services:
  backend:
    build:
      context: ./
      dockerfile: ./backend/Dockerfile.${NODE_ENV}
    restart: always
    depends_on:
      - db
    volumes:
      - ./backend:/app
      - ./common:/common
    networks:
      - internal
      - gibson-network
    ports:
      - ${BACKEND_DEBUG_PORT}:${BACKEND_DEBUG_PORT}
    env_file:
      - .env

  db:
    image: mongo
    command: --quiet --logpath /dev/null
    restart: always
    volumes:
      - dbdata:/data/db:rw
    networks:
      - internal

  # Uses ningx in production mode see /frontend/Dockerfile.production
  frontend:
    build:
      context: ./
      dockerfile: ./frontend/Dockerfile.${NODE_ENV}
    volumes:
      - ./frontend:/app
      - ./common:/common:ro
    restart: always
    depends_on:
      - backend
    env_file:
      - .env
    networks:
      - internal
      - gibson-network

  # Test LDAP only in development mode
  ldap:
    build:
      context: ./dev-tools/ldap
      dockerfile: Dockerfile.${NODE_ENV}
    environment:
      - DEBUG=false
    networks:
      - internal

  # Test SMTP + mail client only in development mode
  inbucket:
    build:
      context: ./dev-tools/inbucket
      dockerfile: Dockerfile.${NODE_ENV}
    ports:
      - ${INBUCKET_UI_PORT}:9000
    environment:
      - INBUCKET_LOGLEVEL=error
    networks:
      - internal
      - gibson-network

  # Test SMTP + mail client only in development mode
  mongo-express:
    build:
      context: ./dev-tools/mongo-express
      dockerfile: Dockerfile.${NODE_ENV}
    depends_on:
      - db
    ports:
      - ${MONGO_EXPRESS_PORT}:8081
    environment:
      - ME_CONFIG_MONGODB_URL=${MONGO_URL}
      - ME_CONFIG_BASICAUTH=false
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
    networks:
      - internal
      - gibson-network

volumes:
  dbdata:
    

networks:
  internal:
  gibson-network:
    driver: bridge
    external: true
